{"version":3,"sources":["firebase.js","redux/authReducer.js","Components/Header/accountIcon.svg","Components/Header/Header.js","redux/carReducer.js","Components/BrandsPage/BrandsPage.js","Components/ReturnButton/arrowLeft.svg","Components/ReturnButton/ReturnButton.js","Components/ModelsPage/ModelsPage.js","Components/About/About.js","Components/Review/x.svg","Components/Review/Review.js","Components/ReviewForm/ReviewForm.js","Components/ModelPage/ModelPage.js","Components/Auth/Auth.js","App.js","redux/store.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","SET_USER","RESET_USER","initialState","user","setUser","type","authReducer","state","action","Header","useSelector","dispatch","useDispatch","className","to","src","accountIcon","fullname","onClick","signOut","SET_BRAND","SET_MODEL","initialValue","selectedBrand","selectedModel","setBrand","brand","carReducer","model","BrandsPage","useState","brands","setBrands","useEffect","collection","get","then","data","forEach","item","push","make","models","length","selectBrand","e","target","innerHTML","map","brandName","modelsNum","ReturnButton","path","ArrowLeft","ModelsPage","brandData","setBrandData","doc","onSnapshot","console","log","elem","modelName","toLowerCase","reviews","About","Review","text","authorName","authorId","deleteReview","id","delIcon","ReviewForm","addReview","reviewText","setReviewText","placeholder","value","onChange","ModelPage","modelData","setModelData","find","newModels","filter","newData","update","newReview","Date","Auth","pageStatus","setPageStatus","useForm","register","handleSubmit","signIn","errors","email","password","signInWithEmailAndPassword","userCredential","displayName","uid","signUp","createUserWithEmailAndPassword","updateProfile","pageHeading","buttonText","pageLink","pageLinkText","onSubmit","name","App","onAuthStateChanged","exact","component","middlewares","createStateSyncMiddleware","blacklist","reducers","combineReducers","store","createStore","withReduxStateSync","applyMiddleware","initStateWithPrevTab","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0bAaMA,EAFcC,IAASC,cATN,CACnBC,OAAQ,0CACRC,WAAY,0BACZC,UAAW,UACXC,cAAe,sBACfC,kBAAmB,eACnBC,MAAO,8CAKYC,YACjBC,EAAOT,IAASS,O,QCdhBC,EAAW,WACXC,EAAa,aAEbC,EAAe,CACjBC,KAAM,MAqBGC,EAAU,SAACD,GAAD,MAAW,CAACE,KAAML,EAAUG,SAGpCG,EArBK,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCAClD,OAAOA,EAAOH,MACV,KAAKL,EACD,OAAO,2BACAO,GADP,IAEIJ,KAAMK,EAAOL,OAGrB,KAAKF,EACD,OAAO,2BACAM,GADP,IAEIJ,KAAM,OAGd,QAAS,OAAOI,ICrBT,MAA0B,wC,eC0C1BE,EAlCA,WAEX,IAAMN,EAAOO,aAAY,SAAAH,GAAK,OAAIA,EAAMD,YAAYH,QAE9CQ,EAAWC,cAOjB,OACI,wBAAQC,UAAU,SAAlB,SACI,sBAAKA,UAAU,gBAAf,UACI,qBAAIA,UAAU,cAAd,UACI,oBAAIA,UAAU,eAAd,SACI,cAAC,IAAD,CAASC,GAAG,IAAZ,uBAEJ,oBAAID,UAAU,eAAd,SACI,cAAC,IAAD,CAASC,GAAG,SAAZ,wBAGR,sBAAKD,UAAU,eAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,eAAeE,IAAKC,IACnC,qBAAKH,UAAU,mBAAf,SAAmCV,EAAKc,cAE5C,cAAC,IAAD,CAASJ,UAAU,kBAAkBC,GAAG,IAAII,QArB7C,WACXP,EFWwB,CAACN,KAAMJ,IEV/BF,EAAKoB,WAmBO,iC,QCnCdC,EAAY,YACZC,EAAY,YAGZC,EAAe,CACjBC,cAAe,KACfC,cAAe,MAqBNC,EAAW,SAACC,GAAD,MAAY,CAACrB,KAAMe,EAAWM,UAEvCC,EApBI,WAAmC,IAAlCpB,EAAiC,uDAAzBe,EAAcd,EAAW,uCACjD,OAAOA,EAAOH,MACV,KAAKe,EACD,OAAO,2BACAb,GADP,IAEIgB,cAAef,EAAOkB,QAG9B,KAAKL,EACD,OAAO,2BACAd,GADP,IAEIiB,cAAehB,EAAOoB,QAG9B,QAAS,OAAOrB,ICyBTsB,G,MAzCI,WAEf,IAAMlB,EAAWC,cAFI,EAIOkB,mBAAS,IAJhB,mBAIdC,EAJc,KAINC,EAJM,KAMrBC,qBAAU,WACN5C,EAAG6C,WAAW,UAAUC,MAAMC,MAAK,SAAAC,GAC/B,IAAIN,EAAS,GACbM,EAAKC,SAAQ,SAAAC,GAGTR,EAAOS,KAAK,CACR,UAAaD,EAAKF,OAAOI,KACzB,UAAaF,EAAKF,OAAOK,OAAOC,YAIxCX,EAAUD,QAGf,IAEH,IAAMa,EAAc,SAACC,GACjBlC,EAASc,EAASoB,EAAEC,OAAOC,aAG/B,OACI,sBAAKlC,UAAU,SAAf,UACI,wCACA,qBAAKA,UAAU,gBAAf,SACKkB,EAAOiB,KAAI,SAAAT,GAAI,OACZ,eAAC,IAAD,CAAS1B,UAAU,eAAeK,QAAS0B,EAAkC9B,GAAG,UAAhF,UACI,qBAAKD,UAAU,eAAf,SAA+B0B,EAAKU,YACpC,qBAAKpC,UAAU,cAAf,SAA8B0B,EAAKW,cAFsBX,EAAKU,qBCvCvE,MAA0B,sCCc1BE,G,MATM,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACnB,OACI,eAAC,IAAD,CAAStC,GAAIsC,EAAMvC,UAAU,eAA7B,UACI,qBAAKA,UAAU,qBAAqBE,IAAKsC,IACzC,qBAAKxC,UAAU,qBAAf,yBC4CGyC,G,MA7CI,WAEf,IAAM5B,EAAQhB,aAAY,SAAAH,GAAK,OAAIA,EAAMoB,WAAWJ,iBAC9CZ,EAAWC,cAHI,EAKakB,mBAAS,MALtB,mBAKdyB,EALc,KAKHC,EALG,KAmBrB,OAZAvB,qBAAU,WACFP,EACArC,EAAG6C,WAAW,UAAUuB,IAAI/B,GAAOgC,YAAW,SAAAD,GAC1CE,QAAQC,IAAIH,EAAIpB,QAChBmB,EAAaC,EAAIpB,WAIrBsB,QAAQC,IAAI,cAEjB,IAGC,gCACI,cAAC,EAAD,CAAc1C,QAAS,WAAOP,EAASc,EAAS,QAAS2B,KAAK,MAC9D,6BAAK1B,IACFA,EAGC,8BACO6B,EAGC,qBAAK1C,UAAU,SAAf,SACI,qBAAKA,UAAU,gBAAf,SACK0C,EAAUb,OAAOM,KAAI,SAAAa,GAAI,OACtB,eAAC,IAAD,CAAShD,UAAU,eAAeK,QAAS,WJbvD,IAACU,EIa8DjB,GJb9DiB,EIagFiC,EAAKC,UJb1E,CAACzD,KAAMgB,EAAWO,YIauEd,GAAE,iBAAY+C,EAAKC,UAAUC,eAAtH,UACI,qBAAKlD,UAAU,eAAf,SAA+BgD,EAAKC,YACpC,qBAAKjD,UAAU,cAAf,oBAAkCgD,EAAKG,QAAQrB,OAA/C,yBAPhB,0BAJR,cAAC,IAAD,CAAU7B,GAAG,WCrBdmD,EATD,WACV,OACI,qBAAKpD,UAAU,QAAf,0H,QCJO,G,MAAA,IAA0B,+BC8B1BqD,EAzBA,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAEpCnE,EAAOO,aAAY,SAAAH,GAAK,OAAIA,EAAMD,YAAYH,QAMpD,OACI,sBAAKU,UAAU,SAAf,UACI,qBAAKA,UAAU,cAAf,SACI,qBAAKA,UAAU,iBAAf,SAAiCuD,MAErC,sBAAKvD,UAAU,iBAAf,UACI,qBAAKA,UAAU,eAAf,SAA+BsD,IAC7BhE,EAAKoE,IAAMF,GACb,sBAAKnD,QAZI,WACjBoD,EAAaH,IAWuBtD,UAAU,iBAAtC,UACI,qBAAKA,UAAU,qBAAqBE,IAAKyD,IAD7C,mBCFDC,G,MAhBI,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAAe,EAEI5C,mBAAS,IAFb,mBAEzB6C,EAFyB,KAEbC,EAFa,KAQhC,OACI,sBAAK/D,UAAU,aAAf,UACI,0BAAUA,UAAU,oBAAoBR,KAAK,OAAOwE,YAAY,iHAAuBC,MAAOH,EAAYI,SAAU,SAAClC,GAAQ+B,EAAc/B,EAAEC,OAAOgC,UACpJ,wBAAQjE,UAAU,kBAAkBK,QAP1B,WACdwD,EAAUC,IAMN,kGCqFGK,G,MAzFG,WAEd,IAAM7E,EAAOO,aAAY,SAAAH,GAAK,OAAIA,EAAMD,YAAYH,QAE9C8C,EAAYvC,aAAY,SAAAH,GAAK,OAAIA,EAAMoB,WAAWJ,iBAClDuC,EAAYpD,aAAY,SAAAH,GAAK,OAAIA,EAAMoB,WAAWH,iBALpC,EAOcM,mBAAS,MAPvB,mBAObyB,EAPa,KAOFC,EAPE,OAQc1B,mBAAS,MARvB,mBAQbmD,EARa,KAQFC,EARE,KAUpBjD,qBAAU,WAEF6B,GACAzE,EAAG6C,WAAW,UAAUuB,IAAIR,GAAWS,YAAW,SAAAD,GAE9CD,EAAaC,EAAIpB,QAEjB,IAAIT,EAAQ6B,EAAIpB,OAAOK,OAAOyC,MAAK,SAAAtB,GAAI,OAAIA,EAAKC,WAAaA,KAC7DoB,EAAatD,QAMtB,IAEH,IAuBM0C,EAAe,SAACH,GAClB,IAAIiB,EAAS,YAAO7B,EAAUb,QAC9B0C,EAAUpC,KAAI,SAAAa,GACV,GAAIA,EAAKC,YAAcA,EACnB,OAAOD,EAEXA,EAAKG,QAAUH,EAAKG,QAAQqB,QAAO,SAAA9C,GAAI,OAAIA,EAAK4B,OAASA,QAE7D,IAAImB,EAAO,2BACJ/B,GADI,IAEPb,OAAQ0C,IAEZ/F,EAAG6C,WAAW,UAAUuB,IAAIR,GAAWsC,OAAOD,IAGlD,OACI,8BACOxB,EACC,gCACI,cAAC,EAAD,CAAcV,KAAK,YACnB,uCAAQH,EAAR,YAAqBa,KAClBmB,EAKC,sBAAKpE,UAAU,mBAAf,UACI,cAAC,EAAD,CAAY6D,UAlDlB,SAACC,GAEf,IAAIa,EAAY,CACZ,KAAQ,IAAIC,KACZ,KAAQd,EACR,WAAcxE,EAAKc,SACnB,SAAYd,EAAKoE,IAEjBa,EAAS,YACN7B,EAAUb,QAEjB0C,EAAUpC,KAAI,SAAAa,GACNA,EAAKC,WAAaA,IAClBD,EAAKG,QAAL,CAAgBwB,GAAhB,mBAA8B3B,EAAKG,cAG3C,IAAIsB,EAAO,2BACJ/B,GADI,IAEPb,OAAQ0C,IAEZ/F,EAAG6C,WAAW,UAAUuB,IAAIR,GAAWsC,OAAOD,MA+B1B,8BACCL,EAAUjB,QAAQhB,KAAI,SAAAa,GAAI,OAAI,cAAC,EAAD,CAAQO,WAAYP,EAAKO,WAAYC,SAAUR,EAAKQ,SAAUF,KAAMN,EAAKM,KAAMG,aAAcA,YAPhI,gDALI,cAAC,IAAD,CAAUxD,GAAG,U,QCP1B4E,G,MA5DF,WAET,IAAM/E,EAAWC,cAFF,EAIqBkB,mBAAS,SAJ9B,mBAIR6D,EAJQ,KAIIC,EAJJ,OAM4BC,cAAnCC,EANO,EAMPA,SAAUC,EANH,EAMGA,aASZC,GAfS,EAMiBC,OASjB,SAACC,EAAOC,GACnBxC,QAAQC,IAAR,gBAAqBsC,EAArB,YAA8BC,IAC9BpG,EAAKqG,2BAA2BF,EAAOC,GAAU/D,MAAK,SAAAiE,GAClD1F,EAASP,EAAQ,CACb,SAAYiG,EAAelG,KAAKmG,YAChC,MAASD,EAAelG,KAAK+F,MAC7B,GAAMG,EAAelG,KAAKoG,YAKhCC,EAAS,SAACvF,EAAUiF,EAAOC,GAC7BxC,QAAQC,IAAR,mBAAwB3C,EAAxB,YAAoCiF,EAApC,YAA6CC,IAC7CpG,EAAK0G,+BAA+BP,EAAOC,GAAU/D,MAAK,SAAAiE,GACtDA,EAAelG,KAAKuG,cAAc,CAC9BJ,YAAarF,IACdmB,MAAK,WACJzB,EAASP,EAAQ,CACb,SAAYiG,EAAelG,KAAKmG,YAChC,MAASD,EAAelG,KAAK+F,MAC7B,GAAMG,EAAelG,KAAKoG,cAMpCI,EAA6B,SAAdhB,EAAyB,UAAY,UACpDiB,EAA4B,SAAdjB,EAAyB,UAAY,UACnDkB,EAA0B,SAAdlB,EAAyB,WAAa,QAClDmB,EAA8B,SAAdnB,EAAyB,mBAAqB,2BAEpE,OACI,sBAAK9E,UAAU,OAAf,UACI,oBAAIA,UAAU,gBAAd,SAA+B8F,IAC/B,cAAC,IAAD,CAAS9F,UAAU,aAAaK,QAAS,WAAQ0E,EAAciB,IAAa/F,GAAG,IAA/E,SAAoFgG,IACpF,uBAAMjG,UAAU,aAAakG,SAAUhB,GA1C9B,SAAC,GAAmC,IAAjC9E,EAAgC,EAAhCA,SAAUiF,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClB,SAAdR,EACGK,EAAOE,EAAOC,GAEdK,EAAOvF,EAAUiF,EAAOC,MAsCxB,UACmB,YAAdR,GAA4B,mCAAO9E,UAAU,cAAcR,KAAK,OAAO2G,KAAK,WAAWnC,YAAY,YAAeiB,EAAS,cAC5H,mCAAOjF,UAAU,cAAcR,KAAK,QAAQ2G,KAAK,QAAQnC,YAAY,SAAYiB,EAAS,WAC1F,mCAAOjF,UAAU,cAAcR,KAAK,WAAW2G,KAAK,WAAWnC,YAAY,YAAeiB,EAAS,cACnG,wBAAQjF,UAAU,eAAlB,SAAkC+F,YCZnCK,MAtCf,WAEE,IAAM9G,EAAOO,aAAY,SAAAH,GAAK,OAAIA,EAAMD,YAAYH,QAC9CQ,EAAWC,cAmBjB,OAjBAqB,qBAAU,WACRlC,EAAKmH,oBAAmB,SAAA/G,GAClBA,EAEFQ,EAASP,EAAQ,CACf,SAAYD,EAAKmG,YACjB,MAASnG,EAAK+F,MACd,GAAM/F,EAAKoG,OAGb5C,QAAQC,IAAI,sBAGf,IAKCzD,EAGA,qBAAKU,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOsG,OAAK,EAAC/D,KAAK,IAAIgE,UAAW,kBAAM,cAAC,EAAD,OACvC,cAAC,IAAD,CAAOD,OAAK,EAAC/D,KAAK,UAAUgE,UAAW,kBAAM,cAAC,EAAD,OAC7C,cAAC,IAAD,CAAOhE,KAAK,gBAAgBgE,UAAW,kBAAM,cAAC,EAAD,OAC7C,cAAC,IAAD,CAAOhE,KAAK,SAASgE,UAAW,kBAAM,cAAC,EAAD,YAR1C,cAAC,EAAD,K,gBC5BAC,EAAc,CAACC,oCAJN,CACXC,UAAW,CAAC,kBAKVC,EAAWC,YAAgB,CAC7B9F,aACArB,gBAGEoH,EAAQC,YAAYC,6BAAmBJ,GAAW,GAAIK,IAAe,WAAf,EAAmBR,IAE/ES,+BAAqBJ,GAErBK,OAAOL,MAAQA,EAEAA,QCdfM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINS,SAASC,eAAe,W","file":"static/js/main.6827f66d.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCVjmzEDUHl8v249PG5DH2F52VTivUOp4U\",\r\n    authDomain: \"car-rev.firebaseapp.com\",\r\n    projectId: \"car-rev\",\r\n    storageBucket: \"car-rev.appspot.com\",\r\n    messagingSenderId: \"381340381518\",\r\n    appId: \"1:381340381518:web:89316b019fc5a23fd92e1f\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { db, auth };","const SET_USER = 'SET_USER';\r\nconst RESET_USER = 'RESET_USER';\r\n\r\nconst initialState = {\r\n    user: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER : {\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        }\r\n        case RESET_USER : {\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const setUser = (user) => ({type: SET_USER, user});\r\nexport const resetUser = () => ({type: RESET_USER});\r\n\r\nexport default authReducer;","export default __webpack_public_path__ + \"static/media/accountIcon.eb9ca6bb.svg\";","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\nimport { resetUser } from '../../redux/authReducer';\r\nimport accountIcon from './accountIcon.svg';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n\r\n    const user = useSelector(state => state.authReducer.user);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const logOut = () => {\r\n        dispatch(resetUser());\r\n        auth.signOut();\r\n    }\r\n\r\n    return (\r\n        <header className='header'>\r\n            <nav className='header__inner'>\r\n                <ul className='header__nav'>\r\n                    <li className='header__item'>\r\n                        <NavLink to='/'>Catalog</NavLink>\r\n                    </li>\r\n                    <li className='header__item'>\r\n                        <NavLink to='/About'>About</NavLink>\r\n                    </li>\r\n                </ul>\r\n                <div className='header__auth'>\r\n                    <div className='header__user'>\r\n                        <img className='header__icon' src={accountIcon} />\r\n                        <div className='header__fullname'>{user.fullname}</div>\r\n                    </div>\r\n                    <NavLink className='header__signout' to='#' onClick={logOut}>(Sign Out)</NavLink>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","const SET_BRAND = 'SET_BRAND';\r\nconst SET_MODEL = 'SET_MODEL';\r\n\r\n\r\nconst initialValue = {\r\n    selectedBrand: null,\r\n    selectedModel: null\r\n}\r\n\r\nconst carReducer = (state = initialValue, action) => {\r\n    switch(action.type) {\r\n        case SET_BRAND : {\r\n            return {\r\n                ...state,\r\n                selectedBrand: action.brand\r\n            }\r\n        }\r\n        case SET_MODEL : {\r\n            return {\r\n                ...state,\r\n                selectedModel: action.model\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const setBrand = (brand) => ({type: SET_BRAND, brand});\r\nexport const setModel = (model) => ({type: SET_MODEL, model});\r\nexport default carReducer;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { db } from '../../firebase';\r\nimport { setBrand } from '../../redux/carReducer';\r\nimport './BrandsPage.css';\r\n\r\nconst BrandsPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [brands, setBrands] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection('Brands').get().then(data => {\r\n            let brands = [];\r\n            data.forEach(item => {\r\n                // console.log(item.data());\r\n                // brands.push(item.data().make);\r\n                brands.push({\r\n                    \"brandName\": item.data().make,\r\n                    \"modelsNum\": item.data().models.length\r\n\r\n                })\r\n            })\r\n            setBrands(brands);\r\n        })\r\n\r\n    }, [])\r\n\r\n    const selectBrand = (e) => {\r\n        dispatch(setBrand(e.target.innerHTML));\r\n    }\r\n\r\n    return (\r\n        <div className='brands'>\r\n            <h1>Brands</h1>\r\n            <div className='brands__inner'>\r\n                {brands.map(item =>\r\n                    <NavLink className='brands__item' onClick={selectBrand} key={item.brandName} to='/models'>\r\n                        <div className='brands__name'>{item.brandName}</div>\r\n                        <div className='brands__num'>{item.modelsNum}</div>\r\n                    </NavLink>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BrandsPage;","export default __webpack_public_path__ + \"static/media/arrowLeft.89c4a40b.svg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ArrowLeft from './arrowLeft.svg';\r\nimport './ReturnButton.css';\r\n\r\nconst ReturnButton = ({path}) => {\r\n    return(\r\n        <NavLink to={path} className='returnButton'>\r\n            <img className='returnButton__icon' src={ArrowLeft} />\r\n            <div className='returnButton__text'>Return</div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default ReturnButton;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { db } from '../../firebase';\r\nimport { setBrand, setModel } from '../../redux/carReducer';\r\nimport ReturnButton from '../ReturnButton/ReturnButton';\r\nimport './ModelsPage.css';\r\n\r\nconst ModelsPage = () => {\r\n\r\n    const brand = useSelector(state => state.carReducer.selectedBrand);\r\n    const dispatch = useDispatch();\r\n\r\n    const [brandData, setBrandData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (brand) {\r\n            db.collection(\"Brands\").doc(brand).onSnapshot(doc => {\r\n                console.log(doc.data());\r\n                setBrandData(doc.data());\r\n            })\r\n        }\r\n        else {\r\n            console.log('No brand');\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <ReturnButton onClick={() => {dispatch(setBrand(null))}} path='/' />\r\n            <h1>{brand}</h1>\r\n            {(!brand) ?\r\n                <Redirect to='/' />\r\n                :\r\n                <div>\r\n                    {(!brandData) ?\r\n                        <div></div>\r\n                        :\r\n                        <div className='models'>\r\n                            <div className='models__inner'>\r\n                                {brandData.models.map(elem =>\r\n                                    <NavLink className='models__item' onClick={() => { dispatch(setModel(elem.modelName)) }} to={`models/${elem.modelName.toLowerCase()}`}>\r\n                                        <div className='models__name'>{elem.modelName}</div>\r\n                                        <div className='models__num'>{`(${elem.reviews.length} reviews)`}</div>\r\n                                    </NavLink>)}\r\n                            </div>\r\n                        </div>}\r\n                </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModelsPage;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return(\r\n        <div className='about'>\r\n            This is about page.\r\n            Have a problem with reseting state when opening New Tab. Use Redux-State-Sync for this.\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","export default __webpack_public_path__ + \"static/media/x.6c9a4ba7.svg\";","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './Review.css';\r\nimport delIcon from './x.svg';\r\n\r\nconst Review = ({ text, authorName, authorId, deleteReview }) => {\r\n\r\n    const user = useSelector(state => state.authReducer.user);\r\n\r\n    const reviewDelete = () => {\r\n        deleteReview(text);\r\n    }\r\n\r\n    return (\r\n        <div className='review'>\r\n            <div className='review__top'>\r\n                <div className='review__author'>{authorName}</div>\r\n            </div>\r\n            <div className='review__bottom'>\r\n                <div className='review__text'>{text}</div>\r\n                {(user.id == authorId) && \r\n                <div onClick={reviewDelete} className='review__delete'>\r\n                    <img className='review__deleteIcon' src={delIcon} />\r\n                    Delete\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Review;","import React, { useState } from 'react';\r\nimport './ReviewForm.css';\r\n\r\nconst ReviewForm = ({addReview}) => {\r\n\r\n    const [reviewText, setReviewText] = useState('');\r\n\r\n    const reviewAdd = () => {\r\n        addReview(reviewText)\r\n    }\r\n\r\n    return (\r\n        <div className='reviewForm'>\r\n            <textarea className='reviewForm__input' type='text' placeholder='Введите текст отзыва' value={reviewText} onChange={(e) => { setReviewText(e.target.value) }} />\r\n            <button className='reviewForm__add' onClick={reviewAdd}>Добавить отзыв</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReviewForm;","import React, { useEffect, useState } from 'react';\r\nimport firebase from 'firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { db } from '../../firebase';\r\nimport ReturnButton from '../ReturnButton/ReturnButton';\r\nimport Review from '../Review/Review';\r\nimport ReviewForm from '../ReviewForm/ReviewForm';\r\nimport './ModelPage.css';\r\n\r\nconst ModelPage = () => {\r\n\r\n    const user = useSelector(state => state.authReducer.user);\r\n\r\n    const brandName = useSelector(state => state.carReducer.selectedBrand);\r\n    const modelName = useSelector(state => state.carReducer.selectedModel);\r\n\r\n    const [brandData, setBrandData] = useState(null);\r\n    const [modelData, setModelData] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        if (modelName) {\r\n            db.collection('Brands').doc(brandName).onSnapshot(doc => {\r\n\r\n                setBrandData(doc.data());\r\n\r\n                let model = doc.data().models.find(elem => elem.modelName == modelName)\r\n                setModelData(model);\r\n            })\r\n        } else {\r\n\r\n        }\r\n\r\n    }, [])\r\n\r\n    const addReview = (reviewText) => {\r\n        \r\n        let newReview = {\r\n            \"time\": new Date(),\r\n            \"text\": reviewText,\r\n            \"authorName\": user.fullname,\r\n            \"authorId\": user.id\r\n        }\r\n        let newModels = [\r\n            ...brandData.models\r\n        ]\r\n        newModels.map(elem => {\r\n            if (elem.modelName == modelName) {\r\n                elem.reviews = [newReview, ...elem.reviews]\r\n            }\r\n        })\r\n        let newData = {\r\n            ...brandData,\r\n            models: newModels\r\n        }\r\n        db.collection('Brands').doc(brandName).update(newData);\r\n    }\r\n\r\n    const deleteReview = (text) => {\r\n        let newModels = [...brandData.models]\r\n        newModels.map(elem => {\r\n            if (elem.modelName !== modelName) {\r\n                return elem\r\n            }\r\n            elem.reviews = elem.reviews.filter(item => item.text !== text);\r\n        })\r\n        let newData = {\r\n            ...brandData,\r\n            models: newModels\r\n        }\r\n        db.collection('Brands').doc(brandName).update(newData);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(!modelName) ? <Redirect to='/' /> :\r\n                <div>\r\n                    <ReturnButton path='/models' />\r\n                    <h1>{`${brandName} ${modelName}`}</h1>\r\n                    {(!modelData) ?\r\n                        <div>\r\n                            Loading...\r\n                        </div>\r\n                        :\r\n                        <div className='modelPage__inner'>\r\n                            <ReviewForm addReview={addReview} />\r\n                            <div>\r\n                            {modelData.reviews.map(elem => <Review authorName={elem.authorName} authorId={elem.authorId} text={elem.text} deleteReview={deleteReview} />)}\r\n                            </div>\r\n                        </div>}\r\n                    {/* <input type='text' placeholder='Введите текст отзыва' value={reviewText} onChange={(e) => { setReviewText(e.target.value) }} />\r\n                    <button onClick={addReview}>Добавить отзыв</button> */}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModelPage;","import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\nimport { setUser } from '../../redux/authReducer';\r\nimport './Auth.css';\r\n\r\n\r\nconst Auth = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [pageStatus, setPageStatus] = useState('login');\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = ({ fullname, email, password }) => {\r\n        (pageStatus == 'login') ?\r\n            signIn(email, password)\r\n            :\r\n            signUp(fullname, email, password);\r\n    }\r\n\r\n    const signIn = (email, password) => {\r\n        console.log(`Login ${email} ${password}`)\r\n        auth.signInWithEmailAndPassword(email, password).then(userCredential => {\r\n            dispatch(setUser({\r\n                \"fullname\": userCredential.user.displayName,\r\n                \"email\": userCredential.user.email,\r\n                \"id\": userCredential.user.uid\r\n            }))\r\n        })\r\n    }\r\n\r\n    const signUp = (fullname, email, password) => {\r\n        console.log(`Register ${fullname} ${email} ${password}`);\r\n        auth.createUserWithEmailAndPassword(email, password).then(userCredential => {\r\n            userCredential.user.updateProfile({\r\n                displayName: fullname\r\n            }).then(() => {\r\n                dispatch(setUser({\r\n                    \"fullname\": userCredential.user.displayName,\r\n                    \"email\": userCredential.user.email,\r\n                    \"id\": userCredential.user.uid\r\n                }))\r\n            })\r\n        })\r\n    }\r\n\r\n    const pageHeading = (pageStatus == 'login') ? 'Sign In' : 'Sign Up';\r\n    const buttonText = (pageStatus == 'login') ? 'Sign In' : 'Sign Up';\r\n    const pageLink = (pageStatus == 'login') ? 'register' : 'login';\r\n    const pageLinkText = (pageStatus == 'login') ? 'Need an account?' : 'Already have an account?';\r\n\r\n    return (\r\n        <div className='auth'>\r\n            <h1 className='auth__heading'>{pageHeading}</h1>\r\n            <NavLink className='auth__link' onClick={() => { setPageStatus(pageLink) }} to='#'>{pageLinkText}</NavLink>\r\n            <form className='auth__form' onSubmit={handleSubmit(onSubmit)}>\r\n                {pageStatus == 'register' && <input className='auth__input' type='text' name='fullname' placeholder='Fullname' {...register('fullname')} />}\r\n                <input className='auth__input' type='email' name='email' placeholder='Email' {...register('email')} />\r\n                <input className='auth__input' type='password' name='password' placeholder='Password' {...register('password')} />\r\n                <button className='auth__button'>{buttonText}</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","import { Route } from 'react-router';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport BrandsPage from './Components/BrandsPage/BrandsPage';\nimport ModelsPage from './Components/ModelsPage/ModelsPage';\nimport About from './Components/About/About';\nimport ModelPage from './Components/ModelPage/ModelPage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Auth from './Components/Auth/Auth';\nimport { useEffect } from 'react';\nimport { auth } from './firebase';\nimport { setUser } from './redux/authReducer';\n\nfunction App() {\n\n  const user = useSelector(state => state.authReducer.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n\n        dispatch(setUser({\n          \"fullname\": user.displayName,\n          \"email\": user.email,\n          \"id\": user.uid\n        }))\n      } else {\n        console.log('Not logged in');\n      }\n    })\n  }, [])\n\n\n\n  return (\n    (!user) ?\n      <Auth />\n      :\n      <div className=\"App\">\n        <div className='App__body'>\n          <Header />\n          <Route exact path='/' component={() => <BrandsPage />} />\n          <Route exact path='/models' component={() => <ModelsPage />} />\n          <Route path='/models/:slug' component={() => <ModelPage />} />\n          <Route path='/about' component={() => <About />} />\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport carReducer from './carReducer';\r\nimport authReducer from './authReducer';\r\nimport { createStateSyncMiddleware, initStateWithPrevTab, withReduxStateSync } from \"redux-state-sync\";\r\n\r\nconst config = {\r\n    blacklist: ['TOGGLE_TODO'],\r\n}\r\n\r\nconst middlewares = [createStateSyncMiddleware(config)];\r\n\r\nconst reducers = combineReducers({\r\n    carReducer,\r\n    authReducer\r\n})\r\n\r\nconst store = createStore(withReduxStateSync(reducers), {}, applyMiddleware(...middlewares));\r\n\r\ninitStateWithPrevTab(store);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}